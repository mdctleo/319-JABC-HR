-- PROCEDURES

-- get_employee(IN id INT)
DROP PROCEDURE IF EXISTS get_employee;

DELIMITER //

CREATE PROCEDURE `get_employee`(IN id INT)
BEGIN
  SELECT *
  FROM HR_RECORD hr1
  INNER JOIN (
    SELECT EMPLOYEE_ID, MAX(VERSION)
    FROM HR_RECORD
    GROUP BY EMPLOYEE_ID
  ) hr2 ON hr1.EMPLOYEE_ID = hr2.EMPLOYEE_ID AND hr1.VERSION = hr2.VERSION
  WHERE hr1.EMPLOYEE_ID = id;
END //

DELIMITER ;


-- get_performance_reports(IN id INT)
DROP PROCEDURE IF EXISTS get_performance_reports;

DELIMITER //

CREATE PROCEDURE `get_performance_reports` (IN id INT)
BEGIN
    SELECT *
    FROM PERFORMANCE p
    LEFT JOIN JABC_GOAL jg ON p.PERFORMANCE_ID = jg.PERFORMANCE_ID
    LEFT JOIN PERSONAL_TARGET pt ON p.PERFORMANCE_ID = pt.PERFORMANCE_ID
    LEFT JOIN JABC_GOAL jg ON p.PERFORMANCE_ID = jg.PERFORMANCE_ID
    LEFT JOIN OBJECTIVE o ON p.PERFORMANCE_ID = o.PERFORMANCE_ID
    LEFT JOIN DEVELOPMENT_GOAL dg ON p.PERFORMANCE_ID = dg.PERFORMANCE_ID
    LEFT JOIN COMMENT c ON p.PERFORMANCE_ID = c.PERFORMANCE_ID
    WHERE p.EMPLOYEE_ID = id;
END //

DELIMITER ;


-- get_support_docs(IN id INT)
DROP PROCEDURE IF EXISTS get_support_docs;

DELIMITER //

CREATE PROCEDURE `get_support_docs` (IN id INT)
BEGIN
    SELECT *
    FROM SUPPORT_DOC sd
    LEFT JOIN `jabc_db`.TYPE t ON sd.TYPE_ID = t.TYPE_ID
    WHERE sd.EMPLOYEE_ID = id;
END //

DELIMITER


-- get_manager_employees(IN id INT)
DROP PROCEDURE IF EXISTS get_manager_employees;

DELIMITER //

CREATE PROCEDURE `get_manager_employees` (IN id INT)
BEGIN
    SELECT *
    FROM MANAGER_EMPLOYEE m
    LEFT JOIN HR_RECORD h ON m.EMPLOYEE_ID = h.EMPLOYEE_ID
    WHERE m.MANAGER_ID = id;
END //

DELIMITER


-- get_all_employees()
DROP PROCEDURE IF EXISTS get_all_employees;

DELIMITER //

CREATE PROCEDURE `get_all_employees` ()
BEGIN
    SELECT *
    FROM HR_RECORD;
END //

DELIMITER