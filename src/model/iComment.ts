/**
 * JABC
 * This API provides all the functions needed to manage  the JABC HR system. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: jabraham9719@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


/**
 * A Comment contains what another employee thinks about the performance record of another employee 
 */
export interface IComment { 
    /**
     * The unique identifier of the Comment
     */
    id: number;
    /**
     * Foreign key of PerformancePlan that has this Comment
     */
    fkPerformancePlan?: number;
    /**
     * Foreign key of PerformanceReview that has this Comment
     */
    fkPerformanceReview?: number;
    /**
     * Foreign key of Employee that created the Comment
     */
    fkCommenter: number;
    comment: string;
    /**
     * The date when the Comment was created
     */
    date: string;
}

export class Comment implements IComment{
    /**
     * The unique identifier of the Comment
     */
    id: number;
    /**
     * Foreign key of PerformancePlan that has this Comment
     */
    fkPerformancePlan?: number;
    /**
     * Foreign key of PerformanceReview that has this Comment
     */
    fkPerformanceReview?: number;
    /**
     * Foreign key of Employee that created the Comment
     */
    fkCommenter: number;
    comment: string;
    /**
     * The date when the Comment was created
     */
    date: string;

    constructor(rawComment: any){
        this.id = rawComment.COMMENT_ID;
        this.fkPerformancePlan = rawComment.PERFORMANCE_PLAN_ID;
        this.fkPerformanceReview = rawComment.PERFORMANCE_REVIEW_ID;
        this.fkCommenter = rawComment.COMMENTER_ID;
        this.comment = rawComment.COMMENT;
        this.date = rawComment.DATE;
    }

    static Comments(rawComments: any[]){
        let Comments: IComment[] = [];
        for(let rawComment of rawComments){
            Comments.push(new Comment(rawComment))
        }
        return Comments
    }

    static Prepare(rawComment: IComment) {
        rawComment.fkPerformancePlan = (rawComment.fkPerformancePlan != undefined) ? rawComment.fkPerformancePlan : null;
        rawComment.fkPerformanceReview = (rawComment.fkPerformanceReview != undefined) ? rawComment.fkPerformanceReview : null;
        return rawComment;
    }
}