/**
 * JABC
 * This API provides all the functions needed to manage  the JABC HR system. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: jabraham9719@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


/**
 * A Vacation contains info of the employee asking for a vaction period 
 */
export interface IVacation { 
    /**
     * The unique identifier of the Vacation
     */
    id: number;
    /**
     * The unique identifier of the Employee that requests the vacation
     */
    fkEmployee: number;
    /**
     * The unique identifier of the Employee that approves the vacation request
     */
    fkApprover?: number;
    /**
     * The number of vacation days the employee requested
     */
    requestedDays: number;
    requestedStatus: number;
    /**
     * The date when the employee requested the vacation
     */
    date: string;
}

export class Vacation implements IVacation{
    /**
     * The unique identifier of the Vacation
     */
    id: number;
    /**
     * The unique identifier of the Employee that requests the vacation
     */
    fkEmployee: number;
    /**
     * The unique identifier of the Employee that approves the vacation request
     */
    fkApprover?: number;
    /**
     * The number of vacation days the employee requested
     */
    requestedDays: number;
    requestedStatus: number;
    /**
     * The date when the employee requested the vacation
     */
    date: string;

    constructor(rawVacation: any){
        this.id = rawVacation.VACATION_REQUEST_ID;
        this.fkEmployee = rawVacation.EMPLOYEE_ID;
        this.fkApprover = rawVacation.APPROVER_ID;
        this.requestedDays = rawVacation.REQUESTED_DAYS;
        this.requestedStatus = rawVacation.REQUEST_STATUS;
        this.date = rawVacation.DATE;
    }

    static Vacations(rawVacations: any[]){
        let vacations: IVacation[] = [];
        for(let rawVacation of rawVacations){
            vacations.push(new Vacation(rawVacation))
        }
        return vacations
    }

    static Prepare(rawVacation: IVacation){
        rawVacation.fkApprover = (rawVacation.fkApprover) ? rawVacation.fkApprover : null;
        return rawVacation
    }
}