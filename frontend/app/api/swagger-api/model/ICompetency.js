/**
 * JABC
 * This API provides all the functions needed to manage  the JABC HR system. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: jabraham9719@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The ICompetency model module.
* @module model/ICompetency
* @version 1.0.0
*/
export default class ICompetency {
    /**
    * Constructs a new <code>ICompetency</code>.
    * Competency, contains info of competencies and objectives that each role need to fulfill 
    * @alias module:model/ICompetency
    * @class
    * @param fkRole {Number} role ID, Foreign key of the role
    */

    constructor(fkRole) {
        

        
        

        this['fkRole'] = fkRole;

        
    }

    /**
    * Constructs a <code>ICompetency</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/ICompetency} obj Optional instance to populate.
    * @return {module:model/ICompetency} The populated <code>ICompetency</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ICompetency();

            
            
            

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('fkRole')) {
                obj['fkRole'] = ApiClient.convertToType(data['fkRole'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
        }
        return obj;
    }

    /**
    * competency ID, the unique identifier of the Competency
    * @member {Number} id
    */
    id = undefined;
    /**
    * role ID, Foreign key of the role
    * @member {Number} fkRole
    */
    fkRole = undefined;
    /**
    * name, of the competency
    * @member {String} name
    */
    name = undefined;
    /**
    * description, of the competency
    * @member {String} description
    */
    description = undefined;








}


